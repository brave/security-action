runner:
  opengrep:
    name: opengrep
    cmd: |
      set -e
      (opengrep \
          -c $SCRIPTPATH/opengrep_rules/generated/oss/vulns.yaml \
          -c $SCRIPTPATH/opengrep_rules/frozen/nonfree/vulns.yaml \
          -c $SCRIPTPATH/opengrep_rules/generated/oss/audit.yaml \
          -c $SCRIPTPATH/opengrep_rules/frozen/nonfree/audit.yaml \
          $(find $SCRIPTPATH/opengrep_rules -name '*.yml' -or -name '*.yaml' -not -name "*.test.yml" -not -name "*.test.yaml" -not -path "$SCRIPTPATH/opengrep_rules/generated/*" | sed 's/^/-c /g') \
          --metrics=off \
          --quiet \
          $([ -n "${GITHUB_BASE_REF+set}" ] && echo "--baseline-commit origin/${GITHUB_BASE_REF:-main}") \
          --json \
      | jq -r '.results[] | "\(.extra.severity[0:1]):\(.path):\(.end.line) \(.extra.message | sub("\n";"<br/>";"g"))<br><br>Source: \(.extra.metadata.source)<br><br><!-- Category: \(.extra.metadata.category // "correctness") -->,\(if .extra.metadata.assignees then .extra.metadata.assignees else "null" end | sub("\n";" ";"g"))"' \
      | $SCRIPTPATH/cleaner.rb --opengrep --assignees) 2> reviewdog.opengrep.stderr.log
    errorformat:
      - "%t:%f:%l %m"
  sveltegrep:
    name: sveltegrep
    cmd: |
      set -e
      (python3 $SCRIPTPATH/scripttagextractor.py \
        --suffix .extractedscript.js \
        --ignore-no-files \
        --all-changed-files-suffix .html && \
      python3 $SCRIPTPATH/scripttagextractor.py \
        --add-suffix-to-original .extractedscript.html \
        --suffix .extractedscript.ts \
        --ignore-no-files \
        --all-changed-files-suffix .svelte && \
      opengrep \
        -c $SCRIPTPATH/opengrep_rules/generated/oss/vulns.yaml \
        -c $SCRIPTPATH/opengrep_rules/frozen/nonfree/vulns.yaml \
        -c $SCRIPTPATH/opengrep_rules/generated/oss/audit.yaml \
        -c $SCRIPTPATH/opengrep_rules/frozen/nonfree/vulns.yaml \
        $(find $SCRIPTPATH/opengrep_rules -name '*.yml' -or -name '*.yaml' -not -name "*.test.yml" -not -name "*.test.yaml" -not -path "$SCRIPTPATH/opengrep_rules/generated/*" | sed 's/^/-c /g') \
        --metrics=off \
        --json \
        --quiet \
        --no-git-ignore \
        '--include=*.extractedscript.ts' \
        '--include=*.extractedscript.js' \
        '--include=*.extractedscript.html' \
        ./ \
        | jq -r '.results[] | "\(.extra.severity[0:1]):\(.path):\(.end.line) \(.extra.message | sub("\n";"<br/>";"g"))<br><br>Source: \(.extra.metadata.source)<br><br><!-- Category: \(.extra.metadata.category // "correctness") -->,\(if .extra.metadata.assignees then .extra.metadata.assignees else "null" end | sub("\n";" ";"g"))"' \
        | $SCRIPTPATH/cleaner.rb --assignees --sveltegrep && \
      find . -type f -name '*.extractedscript.*' -delete) 2> reviewdog.sveltegrep.stderr.log
    errorformat:
      - "%t:%f:%l %m"
  safesvg:
    name: safesvg
    cmd: |
      set -e
      (xargs -0 -n1 -a $SCRIPTPATH/all_changed_files.txt $SCRIPTPATH/xmllint.sh \
      | $SCRIPTPATH/cleaner.rb --svgo) 2> reviewdog.safesvg.stderr.log
    errorformat:
      - "%f:%l: %m"
  tfsec:
    name: tfsec
    cmd: |
      set -e
      (xargs -0 -n1 -a $SCRIPTPATH/all_changed_files.txt | grep '\.tf$' | xargs -r -d '\n' dirname | sort -u \
      | xargs -r -d '\n' $SCRIPTPATH/tfsec.sh \
      | jq -r '.diagnostics[] | "\(.severity[0:1]):\(.location.path):\(.location.range.start.line) \(.message  | sub("\n";"<br/>";"g"))<br><br>source: \(.code.url)<br><br>"' \
      | $SCRIPTPATH/cleaner.rb) 2> /dev/null # TODO: reviewdog.tfsec.stderr.log
    errorformat:
      - "%t:%f:%l %m"
  brakeman:
    name: brakeman
    cmd: "set -e\n(if xargs -0 -n1 -a $SCRIPTPATH/all_changed_files.txt | grep -q '\\.rb$'; then\n  bundle exec brakeman --quiet \\\n    --no-exit-on-warn \\\n    --no-exit-on-error \\\n    --skip-files vendor/ \\\n    --skip-libs \\\n    --force \\\n    --format json \\\n  | jq -r '.warnings[] | \"\\(.confidence[0:1]):\\(.file):\\(.line) \\(.message | sub(\"\\n\";\"<br/>\";\"g\"))<br><br>Source: \\(.link)\"' \\\n  | $SCRIPTPATH/cleaner.rb\nfi) 2> reviewdog.brakeman.stderr.log \n"
    errorformat:
      - "%t:%f:%l %m"
  npm-audit:
    name: npm-audit
    cmd: |
      set -e
      (python3 $SCRIPTPATH/npm-audit.py \
      | $SCRIPTPATH/cleaner.rb) 2> reviewdog.npm-audit.stderr.log
    errorformat:
      - "%t:%f:%l %m"
  pip-audit:
    name: pip-audit
    cmd: "set -e\n(python3 $SCRIPTPATH/pip-audit.py \\\n| $SCRIPTPATH/cleaner.rb) 2> /dev/null # reviewdog.pip-audit.stderr.log \n"
    errorformat:
      - "%t:%f:%l %m"
