rules:
  - id: raptor-interesting-api-calls
    metadata:
      author: Marco Ivaldi <raptor@0xdeadbeef.info>
      references:
        - https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java
        - https://github.com/x509cert/banned/blob/master/banned.h
        - https://g.co/kgs/PCHQjJ
        - https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf
      confidence: MEDIUM
      # NOTE: goto, try/catch, kill/sig/jmp, sem/mutex, new/delete, 
      # static_cast/reinterpret_cast are not covered.
      source: https://github.com/brave/security-action/blob/main/assets/semgrep_rules/client/interesting-api-calls.yaml
      category: security
    message: >-
      Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.
    severity: INFO
    languages:
      - c
      - cpp
    patterns:
      - pattern: $FUNC(...)
      - metavariable-regex:
          metavariable: $FUNC
          regex: \w*(set\w*(u|g)id|(init|set)groups|str\w?cpy|stpn?cpy|str\w?cat|wcs\w?cpy|wcpn?cpy|wcs\w?cat|strtok|wcstok|s\w?printf\w*\(.*|sn\w?printf\w*\(.*|scanf|get(s|c|char|pw|pass|wd|cwd|env|opt|opt_long)|memc?cpy|mem(move|set)|bcopy|alloca|exec(l|v)?(p|e)?e?|system|open(at)?(64)?|pipe|connect|read|recv(from)?|fork|clone|mk\w?temp(64)?|te?mpnam|tmpfile|mkdir|creat|link(at)?|rename(at)?|access(at)?|stat(at)?|ch(own|mod)(at)?|rand|assert)$
      - pattern-not-regex: RunOnUIThread
      - pattern-not-regex: CalledOnValidThread
